df.isnull().sum()
df.drop_duplicates()
df.dropna()
df["Last_Name"]=df["last_name"].str.strip()
df.nunique()
df.sort_values(by="Hours per day", ascending=false).head()
sns.heatmap(df.corr().annot=True)
plt.rcParams['figure.figsize']=(20,2)
plt.show()


df.groupby("Continent").mean()
df["Continent"].str.contains["Africa"]
df.groupby("Continent").sort_values(by="2022 Population", ascending=false)
df2=df.groupby("Continent").mean().sort_values(by="2022 Population", ascending=false)
df2.plot()
df2.transpose()
df3= df[[.popolations]].groupby("Continent").mean().sort_values(by="2022 Population", ascending=False)
trans_df3=df.transpose()
trans_df3.plot()
df.boxplot(figsize=(20,10))
df.select_dtypes(include='object')

df["Phone Number"]=df["Phone Number"].str.replace("[^a-zA-Z0-9]","")
df["Phone Number"]= df["Phone Number"].apply(lambda x: str(x))
df["Phone Number"]= df["Phone Number"].apply(lambda x: x[0:3]+' '+[3:6]+' '+[6:])
df["Phone Number"]= df["Phone Number"].str.replace["nan", '']
df["Phone Number"]= df["Phone Number"].str.replace["Na", '']

#df["address"]=df["address"].str.strip()
#df["address"]=df["address"].str.replace("[^a-zAZ0-9]", "")
#df["address"]=df["address"].apple(lambda x: x[])
df[["street","State", "Zip Code"]]df["address"].str.split(',', 2, expand=True)

df["Paying customer"]=df["Paying customer"].str.replace("Yes", "Y")
df["Paying customer"]=df["Paying customer"].str.replace("No", "N")

df["Do Not contact"]=df["Do Not contact"].str.replace("Yes", "Y")
df["Do not contact"]=df["Do Not contact"].str.replace("No", "N")

df=df.fillna("Na", "")


for x in df.index:
	if df.loc[x: "Do Not contact"]==Y:
		df.drop(x, inplace=True)
df=df.dropna(subset="Phone Number", inplace=True)
#for x in df.index:
#	if df.loc[x: "Phone Number"]==""
#		df.drop(x, inplace=True)
df=df.reset_index(drop=True)


plt.hist(df[""], bins=10, color = "purple", alpha=0.6)
plt,.xlabel("value")
plt.ylabel("")
plt.title("")
plt.show()

plt.bar(df[x], df[y], color= green)
plt.plot(x, y, label)
plt.legend()
plt.xticks(rotation= 75) #rotate xlabel
plt.gcf().autofmt_xdaate() # datetime

sns.hist(data=df[""], bins, 10, color="purple")
sns.barplot(x="", y="", data =df, color="green")
sns.lineplot()


fig= px.bar(df, x="",y="", title="")
fig.show()
fig = px.scatter_3d(df,x=, y=, z=, title)
fig.show()

sns.heatmap(data, cmp='viridis')
plt.show()

plt.imshow(data, cmap='viridis')
plt.colorbar
plt.title()
plt.show()

fig = px.imshow(data, color_continuous_scale="Viridis")
fig.show()